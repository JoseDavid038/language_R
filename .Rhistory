fig
library(ggplot2)
library(tidyverse)
# Data simulation
set.seed(5)
x <- runif(100)
df <- data.frame(x = seq_along(x), var = x)
# Box plot
p1 <- ggplot(df, aes(x = "", y = var)) +
geom_boxplot()
# View the plots
p1
vector = c(10,10,9,8,11)
hist(vector, xlab = "Eje X", xlim = c(6,13),breaks = seq(7,12, by=1))
library(repmis)
source_data("https://github.com/hllinas/DatosPublicos/blob/main/Estudiantes.Rdata?raw=false")
Estudiantes
Estudiantes
edad <- Estudiantes[[Edad]]
edad <- Estudiantes[[edad]]
edad <- Estudiantes[["Edad"]]
edad
edad <- Estudiantes[["Sexo"]]
edad
edad <- Estudiantes[["Edad"]]
edad
typeof(edad)
Estudiantes$Edad <- as.numeric(as.character(Estudiantes$Edad))
edad2 <- Estudiantes$Edad
typeof(edad)
typeof(edad2)
edad
---
title: "Actividad_2"
typeof(edad)
edad2
hist(edad, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
hist(edad2, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
svg(filename = "Edad muestra de Estudiantes.svg", width = 6, height = 4)
hist(edad2, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
svg(filename = "Edad muestra de Estudiantes.svg", width = 6, height = 4)
hist(edad2, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
hist(edad2, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
hist(edad2, xlab = "Edad (años)", main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
Estudiantes
edad
typeof(edad)
typeof(edad2)
edad2
Sexo_y_edad_filtro <- table(Sexo, Edad);
Sexo_y_edad_filtro <- table(Sexo, Edad);
sexo <- Estudiantes[["Sexo"]]
Sexo_y_edad_filtro <- table(Sexo, Edad);
Sexo_y_edad_filtro <- table(sexo, edad2);
Sexo_y_edad_filtro
sexo_y_edad_filtro <- table(sexo, edad2);
sexo_y_edad_filtro
barplot(Sexo_y_edad_filtro,
main="Diagrama de barras",      #C) Título principal
xlab="Fuma",                    #D) Tíulo del eje X
ylab="Frecuencias",             #E) Título del eje Y
legend = rownames(sexo_y_edad_filtro),    #F) Mostrar las leyendas
ylim = c(0, 300),               #G) Ajustar límites en eje Y
col=c("pink","blue")            #H) Colorear las barras
)
library(dplyr)
conteo_sexo <- Estudiantes %>%
count(sexo)
conteo_sexo <- Estudiantes %>%
count(Sexo)
print(conteo_sexo)
```{}
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white")
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white")
conteo_sexo <- Estudiantes %>%
count(Sexo)
print(conteo_sexo)
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white")
conteo_sexo <- table(datosCompleto$Sexo)
conteo_sexo <- table(Estudiantes$Sexo)
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white")
conteo_sexo
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white")
barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 10))  # Ajuste del límite superior del eje y
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 3,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 10))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 3,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = -3,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 2,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 10))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 2,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 10))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = cantidad,
fill = colores_profesionales,
title = "Cantidad"
)
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = conteo_sexo,
fill = colores_profesionales,
title = "Cantidad"
)
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = conteo_sexo,
fill = palette(),
title = "Cantidad"
)
legend(
"topright",
legend = conteo_sexo,
title = "Cantidad"
)
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = conteo_sexo,
title = "Cantidad"
)
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = conteo_sexo,
fill = palette(),
title = "Cantidad"
)
bar_positions <- barplot(conteo_sexo,
main = "Cantidad de Estudiantes por Sexo",
xlab = "Sexo",
ylab = "Cantidad de Estudiantes",
col = c("#1f77b4", "#ff7f0e"),  # Colores para cada barra
border = "white",
ylim = c(0, max(conteo_sexo) + 20))  # Ajuste del límite superior del eje y
#Ahora le agregamos etiquetas de conteo sobre las barras
text(x = bar_positions,
y = conteo_sexo,
label = conteo_sexo,  # Los valores a mostrar
pos = 1,  # Posición: 3 significa arriba de la barra
cex = 1,  # Tamaño del texto
col = "black")  # Color del texto
legend(
"topright",
legend = conteo_sexo,
fill = c("#1f77b4", "#ff7f0e"),
title = "Cantidad"
)
hist(edad2, xlab = "Edad (años)", ylab = "Cantidad Estudiantes",main = "Edad muestra de Estudiantes - Encuesta", col = "royalblue1")
Mujeres_no_fuman = Estudiantes["No","Femenino"]
filtro <- table(Fuma, Sexo)
filtro <- table(Estudiantes$Fuma, Estudiantes$Sexo)
Mujeres_no_fuman = filtro["No","Femenino"]
Mujeres_no_fuman
x = 1:50
y = x**2
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "blue", pch = 2)
library(lessR)
# Categorical data
cat_var <- factor(c(rep("Group 1", 10),
rep("Group 2", 15),
rep("Group 3", 30),
rep("Group 4", 20)))
# Store the variable as data frame
cat <- data.frame(cat_var)
# Pie
cols <-  hcl.colors(length(levels(cat_var)), "Fall")
PieChart(cat_var, data = cat, hole = 0,
fill = cols,
labels_cex = 0.6)
library(lessR)
estrato_var <- factor(Estudiantes$Estrato)
estrato_df <- data.frame(estrato_var)
# Pie
cols <-  hcl.colors(length(levels(estrato_var)), "Fall")
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = cols,
labels_cex = 0.6)
# Categorical data
cat_var <- factor(c(rep("Group 1", 10),
rep("Group 2", 15),
rep("Group 3", 30),
rep("Group 4", 20)))
# Store the variable as data frame
cat <- data.frame(cat_var)
# Pie
cols <-  hcl.colors(length(levels(cat_var)), "Fall")
PieChart(cat_var, data = cat, hole = 0,
fill = cols,
labels_cex = 0.6)
library(lessR)
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = cols,
labels_cex = 0.6)
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = palette(),
labels_cex = 0.6)
conteo_estrato <- table(estrato_var)
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
conteo_estrato <- table(estrato_var)
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = palette(),
labels_cex = 0.6,
main = "Distribución de Estudiantes por Estrato Socioeconómico",
add_labels = TRUE,
labels = conteo_estrato)
etiquetas <- paste(names(conteo_estrato), conteo_estrato, sep = ": ")
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
conteo_estrato <- table(estrato_var)
etiquetas <- paste(names(conteo_estrato), conteo_estrato, sep = ": ")
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = palette(),
labels_cex = 0.6,
main = "Distribución de Estudiantes por Estrato Socioeconómico",
add_labels = TRUE,
labels = conteo_estrato)
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
conteo_estrato <- table(estrato_var)
etiquetas <- paste(names(conteo_estrato), conteo_estrato, sep = ": ")
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = palette(),
labels_cex = 0.6,
main = "Distribución de Estudiantes por Estrato Socioeconómico",
labels = conteo_estrato)
estrato_var <- factor(Estudiantes$Estrato)
# Store the variable as data frame
estrato_df <- data.frame(estrato_var)
# Crear el gráfico de pastel
cols <- hcl.colors(length(levels(estrato_var)), "Fall")  # Colores para cada grupo
PieChart(estrato_var, data = estrato_df, hole = 0,
fill = palette(),
labels_cex = 0.6,
main = "Distribución de Estudiantes por Estrato Socioeconómico")
library(ggplot2)
df_filtrado <- Estudiantes %>% select(Sexo, Edad, Estatura)
# 1. Gráfico de dispersión: Relación entre Edad y Estatura, diferenciando por Sexo
ggplot(df_filtrado, aes(x = Edad, y = Estatura, color = Sexo)) +
geom_point() +  # Puntos de dispersión
labs(title = "Relación entre Edad y Estatura por Sexo",
x = "Edad",
y = "Estatura") +
theme_minimal()
---
title: "Actividad_2"
ggplot(df_filtrado, aes(x = Sexo, y = Estatura, fill = Sexo)) +
geom_boxplot() +  # Caja y bigotes
labs(title = "Distribución de Estatura por Sexo",
x = "Sexo",
y = "Estatura") +
theme_minimal()
library("plotly")
# Paso 1: Seleccionar las columnas "Sexo" y "Fuma"
datos_filtrados <- Estudiantes[, c("Sexo", "Fuma")]
# Paso 2: Crear una tabla de frecuencias
tabla_frecuencia <- as.data.frame(table(datos_filtrados$Sexo, datos_filtrados$Fuma))
# Renombrar las columnas de la tabla para facilitar el manejo
colnames(tabla_frecuencia) <- c("Sexo", "Fuma", "Frecuencia")
# Paso 3: Crear gráfico de barras apiladas o agrupadas con plotly
grafico <- plot_ly(
data = tabla_frecuencia,
x = ~Sexo,
y = ~Frecuencia,
color = ~Fuma,  # Usamos color para diferenciar "No" y "Si" en la variable "Fuma"
type = "bar"
) %>%
layout(
barmode = "stack",  # Usar "stack" para apilar las barras o "group" para agruparlas
title = "Distribución de Fumadores por Sexo",
yaxis = list(title = "Frecuencia"),
xaxis = list(title = "Sexo")
)
#Mostrar el grafico
grafico
library(repmis)
source_data("https://github.com/hllinas/DatosPublicos/blob/main/Estudiantes.Rdata?raw=false")
View(Estudiantes)
#Libreria para manipulacion de dataframe
library(dplyr)
#dataset de ejemplo incluido dentro de R.
View(mtcars)
setwd("~/Talent Tech")
colname[mtcars]
colnames(mtcars)
mtcars %>%
rename(millas_x_galon = mpg)
colnames(mtcars)
mtcars
mtcars %>%
rename(millas_x_galon = mpg)
mtcars
mtcars
#renombra columnas
#guardo dataset en variable para que cambios permanescan.
View(mtcars)
#renombra columnas
#guardo dataset en variable para que cambios permanescan.
View(mtcars)
mtcars %>%
rename(millas_x_galon = mpg)
mtcars
View(mtcars)
colnames(mtcars)
news_columns <- colnames(mtcars)[1] = "millas_x_galon"
news_columns <- colnames(mtcars)[1] = "millas_x_galon"
news_columns = colnames(mtcars)[1] = "millas_x_galon"
mtcars
#El cambio de nombre de la columna solo se fijara si dataset se guarda en variable.
colnames(mtcars)[1] = "millas_x_galon"
mtcars
mtcars %>%
distinct(cyl)
mtcars
mtcars %>%
filter(cyl > 4) %>%
select(mpg, cyl, hp) %>%
arrange(desc(mpg))
mtcars %>%
filter(cyl > 4) %>%
select(millas_x_galon, cyl, hp) %>%
arrange(desc(mpg))
mtcars %>%
filter(cyl > 4) %>%
select(millas_x_galon, cyl, hp) %>%
arrange(desc(millas_x_galon))
df1 = data.frame(ID = 1:5, Valor1 = c(10,20,30,40,50))
df2 = data.frame(ID = 3:7, Valor1 = c(300,400,500,600,700))
#unir las tablas por la columna ID
df1 %>%
left_join(df2, by = "ID")
mtcars %>%
count(cyl)
mtcars %>%
slice(1:5)
#nombre de columnas
colnames(mtcars)
#nombre de filas
rownames(mtcars)
