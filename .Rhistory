plot(w,z, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "green", type = "b",cex = 1, pch = 16)
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "1")
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "l")
plot(w,z, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "green", type = "b",cex = 1, pch = 16)
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "l")
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "l")
lines(rep(30, each = 50), z, col = 1, lwd = 1, type = "l")
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(w = x_line, z = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(w = x_line, z = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(w = x_line, z = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(w = x_line, z = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(x = x_line, z = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#vertical line
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "l")
w = 1:50
z = w**3
plot(w,z, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
lines(rep(30, each = 50), y, col = 1, lwd = 1, type = "l")
#vertical line
lines(rep(30, each = 50), z, col = 1, lwd = 1, type = "l")
x_line = c(min(w), max(w))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#vertical line
lines(rep(40, each = 40), z, col = 1, lwd = 1, type = "l")
w = 1:50
z = w**3
plot(w,z, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
lines(rep(40, each = 40), z, col = 1, lwd = 1, type = "l")
#vertical line
lines(rep(40, each = 40), z, col = 1, lwd = 1, type = "l")
x = 1:50
y = x**3
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^2", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
lines(rep(40, each = 40), z, col = 1, lwd = 1, type = "l")
x = 1:50
y = x**3
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^3", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
lines(rep(40, each = 40), z, col = 1, lwd = 1, type = "l")
x_line = c(40,40)
y_line =c(min(y), max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l")
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 1)
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 1)
x = 1:50
y = x**3
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^3", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
x_line = c(40,40)
y_line =c(min(y), max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#horizontal line
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#otra linea
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 1)
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
lines(x = x_line, y = y_line, col = 1, lwd = 2,  lty = 2,type = "l")
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2,  lty = 2,type = "l")
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l")
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l")
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
x = 1:50
y = x**3
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^3", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
x_line = c(40,40)
y_line =c(min(y), max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#horizontal line
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#other line
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l")
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x = 1:50
y = x**3
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X^3", col = "green", type = "b",cex = 1, pch = 16)
#vertical line
x_line = c(40,40)
y_line =c(min(y), max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#horizontal line
x_line = c(min(x), max(x))
y_line = c(64000,64000)
lines(x = x_line, y = y_line, col = 1, lwd = 1, type = "l")
#other line
x_line = c(1, max(x))
y_line = c(1, max(y))
lines(x = x_line, y = y_line, col = 1, lwd = 2, type = "l", lty = 2)
x = 1:50
y = x + 10
plot(x,y, main = "Title....", xlab = "seq 1:50", ylab = "X + 10", col = "green", type = "b",cex = 1, pch = 16)
#grid
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)      # Grid line width
set.seed(132)
x <- rnorm(500)
plot(x, pch = 19, col = 4)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)      # Grid line width
set.seed(132)
x <- rnorm(500)
plot(x, pch = 19, col = 4)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 0.5)      # Grid line width
set.seed(132)
x <- rnorm(500)
plot(x, pch = 19, col = 4)
grid(nx = NULL, ny = NULL,
lty = "solid",      # Grid line type
col = "gray", # Grid line color
lwd = 0.5)      # Grid line width
set.seed(132)
x <- rnorm(500)
hist(x)
grid(nx = NA, ny = NULL,
lty = 1, col = "gray", lwd = 1)
hist(x, col = 4,
add = TRUE)
set.seed(132)
x <- rnorm(500)
hist(x)
grid(nx = NA, ny = NULL,
lty = 1, col = "gray", lwd = 1)
hist(x, col = 4,
add = TRUE)
x
set.seed(132)
x <- rnorm(500)
boxplot(x, main = "Grafico de Cajas", ylab = "random normal")
set.seed(132)
x1 <- rnorm(500)
x2 <- rnorm(500, mean = 2, sd = 2)
data = cbin(x1,x2)
set.seed(132)
x1 <- rnorm(500)
x2 <- rnorm(500, mean = 2, sd = 2)
set.seed(132)
x1 <- rnorm(500)
x2 <- rnorm(500, mean = 2, sd = 2)
data = cbind(x1,x2)
boxplot(data, main = "Grafico de Cajas", ylab = "random normal")
median(data[,1])
median(data[,2])
quantile(data[,1])
quantile(data[,2])
x = c(5,4,9)
pie(x)
pie(x, col = c("blue","red","green"))
pie(x, col = c("blue","red","yellow"))
pie(x_sort, col = c("blue","red","yellow"))
x = c(5,4,9)
x_sort = sort(x)
pie(x_sort, col = c("blue","red","yellow"))
pie(x_sort, col = c("blue","red","yellow"), clockwise = TRUE, init.angle = 90)
x = c(5,4,9)
x_sort = sort(x)
pie(x_sort, col = c("blue","red","yellow"), clockwise = TRUE, init.angle = 90)
legend(
"topright",
legend = x,
fill = c("blue","red","yellow"),
title = "Pie Chart"
)
legend(
"topright",
legend = x,
title = "Pie Chart"
)
legend(
"topright",
legend = x,
fill = c("blue","red","yellow"),
title = "Pie Chart"
)
legend(
"topright",
legend = x_sort,
fill = c("blue","red","yellow"),
title = "Pie Chart"
)
pie(x_sort, col = c("blue","red","yellow"), main = "Pie Chart",clockwise = TRUE, init.angle = 90)
legend(
"topright",
legend = x_sort,
fill = c("blue","red","yellow"),
title = "Pie Chart"
)
install.packages("lessR")
library(lessR)
cat_var <- factor(c(rep("Group 1", 10),
rep("Group 2", 15),
rep("Group 3", 30),
rep("Group 4", 20)))
# Store the variable as data frame
cat <- data.frame(cat_var)
# Pie
cols <-  hcl.colors(length(levels(cat_var)), "Fall")
PieChart(cat_var, data = cat, hole = 0,
fill = cols,
labels_cex = 0.6)
setwd("~/Talent Tech")
setwd("~/Talent Tech")
install.packages("tidyverse")
install.packages("ggplot2")
#install.packages("tidyverse")
#install.packages("ggplot2")
library(ggplot2)
#install.packages("tidyverse")
#install.packages("ggplot2")
library(ggplot2)
# Data simulation
set.seed(5)
x <- runif(100)
df <- data.frame(x = seq_along(x), var = x)
# Box plot
p1 <- ggplot(df, aes(x = "", y = var)) +
geom_boxplot()
# Density plot
p2 <- ggplot() +
stat_function(fun = dnorm, geom = "density",
xlim = c(-3, 3), fill = "white")
# Line chart
p3 <- ggplot(df, aes(x = x, y = var)) +
geom_line(color = "gray20")
# Scatter plot
p4 <- ggplot(df, aes(x = x, y = var)) +
geom_point(color = "gray20")
# View the plots
p1
p2
p3
p4
head(df)
library(tidyverse)
setwd("~/Talent Tech")
setwd("~/Talent Tech")
install.packages("plotly")
library(plotly)
df_sabana_de_torres = read.csv("https://www.datos.gov.co/resource/knbe-t62n.csv")
df_sabana_de_torres
source_data("https://github.com/hllinas/DatosPublicos/blob/main/Estudiantes.Rdata?raw=false")
library(repmis)
source_data("https://github.com/hllinas/DatosPublicos/blob/main/Estudiantes.Rdata?raw=false")
Estudiantes
head(Estudiantes)
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma)
fig
fig <- plot_ly(data = Estudiantes, x = ~Edad, y = ~Estrato)
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "bar")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma)
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "histograma2d")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "histogram")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "box")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "pie")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "table")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma,type = "bar")
fig
datosCompleto <- Estudiantes
#Definición de variables a utilizar
Sexo <- as.factor(datosCompleto$Sexo)
Fuma <- as.factor(datosCompleto$Fuma)
fig <- plot_ly(data = datosCompleto, x = ~Sexo, y = ~Fuma, type = "bar")
fig
fig <- plot_ly(data = Estudiantes, x = ~Sexo, y = ~Fuma, type = "bar")
fig
Tabla <- table(Sexo, Fuma)
Tabla
head(Estudiantes)
# Paso 1: Seleccionar las columnas "Sexo" y "Fuma"
datos_filtrados <- Estudiantes[, c("Sexo", "Fuma")]
# Paso 2: Crear una tabla de frecuencias
tabla_frecuencia <- as.data.frame(table(datos_filtrados$Sexo, datos_filtrados$Fuma))
# Renombrar las columnas de la tabla para facilitar el manejo
colnames(tabla_frecuencia) <- c("Sexo", "Fuma", "Frecuencia")
# Paso 3: Crear gráfico de barras apiladas o agrupadas con plotly
fig <- plot_ly(
data = tabla_frecuencia,
x = ~Sexo,
y = ~Frecuencia,
color = ~Fuma,  # Usamos color para diferenciar "No" y "Si" en la variable "Fuma"
type = "bar"
) %>%
layout(
barmode = "stack",  # Usar "stack" para apilar las barras o "group" para agruparlas
title = "Distribución de Fumadores por Sexo",
yaxis = list(title = "Frecuencia"),
xaxis = list(title = "Sexo")
)
# Mostrar el gráfico
fig
head(Estudiantes)
# Convertir las columnas Edad y Estatura a numéricas si es necesario
datos_filtrados <- Estudiantes
datos_filtrados$Edad <- as.numeric(as.character(datos_filtrados$Edad))
datos_filtrados$Estatura <- as.numeric(as.character(datos_filtrados$Estatura))
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Estatura,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad y Estatura",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Estatura (cm)")
)
# Mostrar el gráfico
fig
# Convertir las columnas Edad y Estatura a numéricas si es necesario
datos_filtrados$Edad <- as.numeric(as.character(datos_filtrados$Edad))
datos_filtrados$Estatura <- as.numeric(as.character(datos_filtrados$Estatura))
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Estatura,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad y Estatura",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Estatura (cm)")
)
# Mostrar el gráfico
fig
# Paso 1: Seleccionar las columnas "Sexo" y "Fuma"
datos_filtrados <- Estudiantes[, c("Sexo", "Fuma")]
# Paso 2: Crear una tabla de frecuencias
tabla_frecuencia <- as.data.frame(table(datos_filtrados$Sexo, datos_filtrados$Fuma))
# Renombrar las columnas de la tabla para facilitar el manejo
colnames(tabla_frecuencia) <- c("Sexo", "Fuma", "Frecuencia")
# Paso 3: Crear gráfico de barras apiladas o agrupadas con plotly
fig <- plot_ly(
data = tabla_frecuencia,
x = ~Sexo,
y = ~Frecuencia,
color = ~Fuma,  # Usamos color para diferenciar "No" y "Si" en la variable "Fuma"
type = "bar"
) %>%
layout(
barmode = "stack",  # Usar "stack" para apilar las barras o "group" para agruparlas
title = "Distribución de Fumadores por Sexo",
yaxis = list(title = "Frecuencia"),
xaxis = list(title = "Sexo")
)
#Mostrar el grafico
fig
# Convertir las columnas Edad y Estatura a numéricas si es necesario
datos_filtrados <- Estudiantes
datos_filtrados$Edad <- as.numeric(as.character(datos_filtrados$Edad))
datos_filtrados$Estatura <- as.numeric(as.character(datos_filtrados$Estatura))
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Estatura,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad y Estatura",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Estatura (cm)")
)
# Mostrar el gráfico
fig
# Convertir las columnas Edad y Estatura a numéricas si es necesario
datos_filtrados <- Estudiantes
datos_filtrados$Edad <- as.numeric(as.character(datos_filtrados$Edad))
datos_filtrados$Ingreso <- as.numeric(as.character(datos_filtrados$Ingreso))
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Ingreso,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad y Estatura",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Estatura (cm)")
)
# Mostrar el gráfico
fig
datos_filtrados <- Estudiantes
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Ingreso,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad e Ingreso",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Ingreso")
)
# Mostrar el gráfico
fig
datos_filtrados <- Estudiantes
datos_filtrados$Edad <- as.numeric(as.character(datos_filtrados$Edad))
datos_filtrados$Ingreso <- as.numeric(as.character(datos_filtrados$Ingreso))
# Crear el gráfico de dispersión
fig <- plot_ly(
data = datos_filtrados,
x = ~Edad,
y = ~Ingreso,
type = "scatter",  # Definir el tipo de gráfico como de dispersión
mode = "markers",  # Mostrar solo los puntos
marker = list(color = 'blue')  # Cambiar color de los puntos si deseas
)
# Añadir títulos y etiquetas
fig <- fig %>%
layout(
title = "Relación entre Edad e Ingreso",
xaxis = list(title = "Edad (años)"),
yaxis = list(title = "Ingreso")
)
# Mostrar el gráfico
fig
